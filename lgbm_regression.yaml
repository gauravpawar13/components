name: Lgbmregression
inputs:
- {name: x_train}
- {name: y_train}
- {name: x_valid}
- {name: y_valid}
implementation:
  container:
    image: python:3.9
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'numpy' 'sklearn' 'lightgbm' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip
      install --quiet --no-warn-script-location 'numpy' 'sklearn' 'lightgbm' --user)
      && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - "def lgbmregression(x_train,y_train,x_valid,y_valid):\n    from lightgbm import\
      \ LGBMRegressor\n    import numpy as np\n    from sklearn.metrics import mean_squared_error,\
      \ r2_score\n\n    lightgbm = LGBMRegressor(objective='regression', \n      \
      \                                 num_leaves=4,\n                          \
      \             learning_rate=0.01, \n                                       n_estimators=20000,\n\
      \                                       max_bin=2000, \n                   \
      \                    bagging_fraction=0.75,\n                              \
      \         bagging_freq=5, \n                                       bagging_seed=7,\n\
      \                                       feature_fraction=0.2,\n            \
      \                           feature_fraction_seed=7,\n                     \
      \                  verbose=-1,\n                                       )\n \
      \   gbm = lightgbm.fit(x_train, y_train)\n    gbm_pred = gbm.predict(x_valid)\n\
      \    r2_gbm = r2_score(y_valid, gbm_pred)\n    rmse_gbm = np.sqrt(mean_squared_error(y_valid,\
      \ gbm_pred))\n\n    return r2_gbm,rmse_gbm\n\nimport argparse\n_parser = argparse.ArgumentParser(prog='Lgbmregression',\
      \ description='')\n_parser.add_argument(\"--x-train\", dest=\"x_train\", type=str,\
      \ required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--y-train\"\
      , dest=\"y_train\", type=str, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"\
      --x-valid\", dest=\"x_valid\", type=str, required=True, default=argparse.SUPPRESS)\n\
      _parser.add_argument(\"--y-valid\", dest=\"y_valid\", type=str, required=True,\
      \ default=argparse.SUPPRESS)\n_parsed_args = vars(_parser.parse_args())\n\n\
      _outputs = lgbmregression(**_parsed_args)\n"
    args:
    - --x-train
    - {inputValue: x_train}
    - --y-train
    - {inputValue: y_train}
    - --x-valid
    - {inputValue: x_valid}
    - --y-valid
    - {inputValue: y_valid}
