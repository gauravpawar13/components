name: Xgboost
inputs:
- {name: x_train}
- {name: y_train}
- {name: x_valid}
- {name: y_valid}
implementation:
  container:
    image: python:3.9
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'numpy' 'sklearn' 'xgboost' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip
      install --quiet --no-warn-script-location 'numpy' 'sklearn' 'xgboost' --user)
      && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def xgboost(x_train,y_train,x_valid,y_valid):
          from xgboost import XGBRegressor
          import numpy as np
          from sklearn.metrics import mean_squared_error, r2_score
          xgboost = XGBRegressor(learning_rate=0.01,n_estimators=20000,
                                           max_depth=3, min_child_weight=0,
                                           gamma=0, subsample=0.7,
                                           colsample_bytree=0.7,
                                           objective='reg:linear', nthread=-1,
                                           scale_pos_weight=1, seed=27,
                                           reg_alpha=0.006)
          xgb = xgboost.fit(x_train, y_train)
          xgb_pred = xgb.predict(x_valid)
          r2_xgb = r2_score(y_valid, xgb_pred)
          rmse_xgb = np.sqrt(mean_squared_error(y_valid, xgb_pred))

          return r2_xgb,rmse_xgb

      import argparse
      _parser = argparse.ArgumentParser(prog='Xgboost', description='')
      _parser.add_argument("--x-train", dest="x_train", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--y-train", dest="y_train", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--x-valid", dest="x_valid", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--y-valid", dest="y_valid", type=str, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = xgboost(**_parsed_args)
    args:
    - --x-train
    - {inputValue: x_train}
    - --y-train
    - {inputValue: y_train}
    - --x-valid
    - {inputValue: x_valid}
    - --y-valid
    - {inputValue: y_valid}
